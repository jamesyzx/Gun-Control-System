package UserInterface.GovernementRole.CertificationRole;

import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.CertificateRequest;
import Business.WorkQueue.WorkRequest;
import UserInterface.GovernementRole.VerificationRole.ManageVerificationJPanel;
import java.awt.CardLayout;
import java.awt.Component;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Reyes
 */
public class ProcessAssignments extends javax.swing.JPanel {

    private JPanel display;
    private UserAccount userAccount;
    private Organization organization;
    private String[] combox = {"Accept", "Reject"};

    public ProcessAssignments(JPanel display, UserAccount userAccount, Organization organization) {
        initComponents();
        this.display = display;
        this.userAccount = userAccount;
        this.organization = organization;
        poptable();
        txt1.setText("");
        txt1.setEnabled(false);
        txt2.setEnabled(false);
    }

    private void poptable() {
        DefaultTableModel dtm = (DefaultTableModel) tbl.getModel();
        dtm.setRowCount(0);
        for (WorkRequest request : organization.getWorkQueue().getWorkRequestList()) {
            if (request.getReceiver() == userAccount) {
                Object[] row = new Object[3];
                CertificateRequest certificateRequest = (CertificateRequest) request;
                row[0] = certificateRequest.getStatus();
                row[1] = certificateRequest.getSender().getPerson();
                row[2] = certificateRequest;
                dtm.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Back = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        txt1 = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        txt2 = new javax.swing.JTextArea();
        replybtn = new javax.swing.JButton();
        processbtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 204, 255));
        setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 0, 204), 5), "Government:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 3, 36)), javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 204), 2), "Certificate Department", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 2, 24)))); // NOI18N

        Back.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        Back.setText("<<Back");
        Back.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Back.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/ManufactureRole/回滚箭头.jpg"))); // NOI18N
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });

        tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Status", "Applicant", "Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl);

        txt1.setColumns(20);
        txt1.setRows(5);
        jScrollPane2.setViewportView(txt1);

        txt2.setColumns(20);
        txt2.setRows(5);
        jScrollPane3.setViewportView(txt2);

        replybtn.setBackground(new java.awt.Color(255, 51, 153));
        replybtn.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        replybtn.setText("Reply");
        replybtn.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        replybtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                replybtnActionPerformed(evt);
            }
        });

        processbtn.setBackground(new java.awt.Color(255, 51, 204));
        processbtn.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        processbtn.setText("Process");
        processbtn.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        processbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 538, Short.MAX_VALUE)
                            .addComponent(jScrollPane2)
                            .addComponent(jScrollPane3)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Back))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(258, 258, 258)
                        .addComponent(processbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(257, 257, 257)
                        .addComponent(replybtn, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(123, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(replybtn, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(processbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addComponent(Back, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        display.remove(this);
        CardLayout layout = (CardLayout) display.getLayout();
        layout.previous(display);
    }//GEN-LAST:event_BackActionPerformed

    private void tblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMouseClicked
        int selrow = tbl.getSelectedRow();
        if (selrow < 0) {
            return;
        }
        CertificateRequest certificateRequest = (CertificateRequest) tbl.getValueAt(selrow, 2);
        txt1.setText(certificateRequest.getMail());
        txt2.setText("");
        txt2.setEnabled(false);
    }//GEN-LAST:event_tblMouseClicked

    private void replybtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_replybtnActionPerformed
        int selrow = tbl.getSelectedRow();
        if (selrow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row!");
            return;
        }
        CertificateRequest certificateRequest = (CertificateRequest) tbl.getValueAt(selrow, 2);
        if (certificateRequest.getStatus().equals("Unprocessed")) {
            txt2.setEnabled(true);
            return;
        } else {
            JOptionPane.showMessageDialog(null, "Please select another row. This row has been processed!");
            return;
        }
    }//GEN-LAST:event_replybtnActionPerformed

    private void processbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processbtnActionPerformed
        if (txt2.isEnabled() == false) {
            JOptionPane.showMessageDialog(null, "Please reply the applicant first!");
            return;
        }
        CertificateRequest certificateRequest = (CertificateRequest) tbl.getValueAt(tbl.getSelectedRow(), 2);
        String message = (String) JOptionPane.showInputDialog(null, "How do you proccess this request?", "Process Request",
                JOptionPane.QUESTION_MESSAGE, null, combox, combox[0]);
        if (message == null) {
            return;
        }
        if (message.equals(combox[0])) {
            certificateRequest.getSender().getPerson().setCertificatestatus(true);
            certificateRequest.setStatus("Accepted");
            CertificateRequest newcr = new CertificateRequest();
            newcr.setSender(userAccount);
            newcr.setReceiver(certificateRequest.getSender());
            DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
            Date date = new Date();
            newcr.setDate(dateFormat.format(date));
            newcr.setMail(txt2.getText());
            userAccount.getWorkQueue().getWorkRequestList().add(newcr);
            certificateRequest.getSender().getWorkQueue().getWorkRequestList().add(newcr);
            JOptionPane.showMessageDialog(null, "You accepted the requst.");
        }
        if (message.equals(combox[1])) {
            certificateRequest.getSender().getPerson().setCertificatelock(false);
            certificateRequest.setStatus("Rejected");
            CertificateRequest newcr = new CertificateRequest();
            newcr.setSender(userAccount);
            newcr.setReceiver(certificateRequest.getSender());
            DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
            Date date = new Date();
            newcr.setDate(dateFormat.format(date));
            newcr.setMail(txt2.getText());
            userAccount.getWorkQueue().getWorkRequestList().add(newcr);
            certificateRequest.getSender().getWorkQueue().getWorkRequestList().add(newcr);
            JOptionPane.showMessageDialog(null, "You rejected the requst.");
        }
        poptable();
    }//GEN-LAST:event_processbtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton processbtn;
    private javax.swing.JButton replybtn;
    private javax.swing.JTable tbl;
    private javax.swing.JTextArea txt1;
    private javax.swing.JTextArea txt2;
    // End of variables declaration//GEN-END:variables
}
