/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.DistributorRole;

import Business.Enterprise.DistributorEnterprise;
import Business.Gun.Bullet;
import Business.Gun.Gun;
import Business.Network.Network;

import Business.UserAccount.UserAccount;
import Business.WorkQueue.GunRequest;
import javax.swing.JOptionPane;
import Business.Enterprise.Enterprise;
import Business.Gun.BulletInventoryitem;

import Business.Gun.GunBulletSystem;
import Business.Gun.GunDirectory;
import Business.Gun.GunInventoryitem;

import Business.Organization.OrganizationDirectory;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import Business.WorkQueue.*;
import java.awt.CardLayout;
import java.awt.Component;

/**
 *
 * @author zhaoh
 */
public class ManageTabbedPanel extends javax.swing.JPanel {

    private JPanel display;

    private DistributorEnterprise distributorEnterprise;
    private UserAccount userAccount;

    private Network network;
    private OrganizationDirectory directory;
    private GunDirectory gunDirectory;
    private GunBulletSystem gunBulletSystem;
    private GunRequest gunRequest;
    private BulletRequst bulletRequst;
    int money=0;

    /**
     * Creates new form ManageTabbedPanel
     */
    ManageTabbedPanel(JPanel display, Enterprise enterprise, OrganizationDirectory organizationDirectory, UserAccount userAccount, Network network, GunBulletSystem gunBulletSystem) {
        initComponents();
        this.network = network;
        this.display = display;
        this.gunBulletSystem = GunBulletSystem.getInstance();

        this.distributorEnterprise = (DistributorEnterprise) enterprise;
        this.userAccount = userAccount;

        this.directory = organizationDirectory;
        
        popmanufactorbox();
        popmanufactorbulletbox();
        popbulletbox();

        popgunbox();
        popmanufactorbox();
        popmanufactorbulletbox();
        poprequest();
        popbulletrequest();
        
        


        
    }


    
   
   
 
    public void popgunbox() {
        gunsbox.removeAllItems();
       
        for (Gun gun : gunBulletSystem.getGunDirectory().getGunList()) {
            gunsbox.addItem(gun);
        }
    }

    public void popbulletbox() {
        bulletcb.removeAllItems();
        
        for (Bullet b : gunBulletSystem.getBulletDirectory().getBulletList()) {

            bulletcb.addItem(b);
        }
    }

    public void popmanufactorbox() {
        manubox.removeAllItems();
        for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
            if (enterprise.getEnterpriseType().getValue().equals(Enterprise.EnterpriseType.ManufactorEnterprise.getValue())) {
                manubox.addItem(enterprise);
            }

        }
    }

    public void popmanufactorbulletbox() {
        Manufacturercb.removeAllItems();
        for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
            if (enterprise.getEnterpriseType().getValue().equals(Enterprise.EnterpriseType.ManufactorEnterprise.getValue())) {
                Manufacturercb.addItem(enterprise);
            }

        }
    }

    public void poprequest() {
        DefaultTableModel model = (DefaultTableModel) workRequestJTable1.getModel();

        model.setRowCount(0);

        for (GunRequest gun : userAccount.getWorkQueue().getGunRequestList()) {
            Object[] row = new Object[5];
            row[0] = gun;
            row[1] = gun.getGunInventoryitem().getGuninventory();
            row[2] = gun.getGunprice();

            row[3] = gun.getStatus();
            row[4] = gun.getReceiver() == null ? "waiting" : gun.getReceiver();

            model.addRow(row);
        }

    }

    public void popbulletrequest() {
        DefaultTableModel model = (DefaultTableModel) bulletsTable.getModel();

        model.setRowCount(0);

        for (BulletRequst bu : userAccount.getWorkQueue().getBulletRequstList()) {
            Object[] row = new Object[5];
            row[0] = bu.getBulletInventoryitem().getBullet().getName();
            row[1] = bu.getBulletInventoryitem().getBulletinventory();
            row[2] = bu.getBulletprice();
            row[3] = bu.getStatus();
            row[4] = bu.getReceiver() == null ? "waiting" : bu.getReceiver();

            model.addRow(row);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        bulletsTable = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        pricefixedTxt = new javax.swing.JTextField();
        jButton15 = new javax.swing.JButton();
        bulletcb = new javax.swing.JComboBox();
        requestQuantitybu = new javax.swing.JSpinner();
        jLabel7 = new javax.swing.JLabel();
        Manufacturercb = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        Remove = new javax.swing.JButton();
        refresher = new javax.swing.JButton();
        Request = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        requestTestJButton = new javax.swing.JButton();
        refreshTestJButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        workRequestJTable1 = new javax.swing.JTable();
        gunsbox = new javax.swing.JComboBox();
        requestQuantity = new javax.swing.JSpinner();
        manubox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        pricefixedTF = new javax.swing.JTextField();
        jButton14 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(255, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 51, 51), 5), "Bullets", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 3, 48))); // NOI18N

        bulletsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Items", "Request num", "Price", "Status", "Receiver"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane8.setViewportView(bulletsTable);

        jLabel5.setText("Manufacture:");

        pricefixedTxt.setEnabled(false);
        pricefixedTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pricefixedTxtActionPerformed(evt);
            }
        });

        jButton15.setText("Get Price");
        jButton15.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        bulletcb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        bulletcb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bulletcbActionPerformed(evt);
            }
        });

        requestQuantitybu.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        requestQuantitybu.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                requestQuantitybuKeyTyped(evt);
            }
        });

        jLabel7.setText("Bullets:");

        Manufacturercb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        Manufacturercb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ManufacturercbActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(102, 204, 255));
        jButton1.setText("<<Back");
        jButton1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.gray, java.awt.Color.white));
        jButton1.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/ManufactureRole/回滚箭头.jpg"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jSeparator1.setForeground(new java.awt.Color(255, 51, 51));
        jSeparator1.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(255, 0, 0)));

        jLabel1.setText("Price from Manufacture:");

        jLabel4.setText("Bullets Quantity:");

        jSeparator5.setForeground(new java.awt.Color(255, 0, 51));
        jSeparator5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Request Bullets", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial Black", 0, 14))); // NOI18N

        Remove.setBackground(new java.awt.Color(102, 255, 255));
        Remove.setText("Remove");
        Remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveActionPerformed(evt);
            }
        });

        refresher.setText("Refresh");
        refresher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refresherActionPerformed(evt);
            }
        });

        Request.setText("Request");
        Request.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.darkGray, java.awt.Color.white));
        Request.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RequestActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 462, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Manufacturercb, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)
                                .addComponent(bulletcb, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(57, 57, 57))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(pricefixedTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator5)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(requestQuantitybu, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(232, 411, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Request, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Remove, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)
                            .addComponent(refresher, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Remove, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(72, 72, 72)
                        .addComponent(refresher, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(Manufacturercb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7)
                                    .addComponent(bulletcb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(29, 29, 29)
                                .addComponent(jButton15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(pricefixedTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(31, 31, 31)
                                        .addComponent(requestQuantitybu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel4)))))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(48, 48, 48)
                                .addComponent(Request))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(151, 151, 151)
                                .addComponent(jButton1)))
                        .addGap(0, 41, Short.MAX_VALUE))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 412, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Import Bullets", jPanel1);

        jPanel3.setBackground(new java.awt.Color(255, 204, 204));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 51, 51), 5), "Guns", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 3, 48))); // NOI18N
        jPanel3.setForeground(new java.awt.Color(51, 51, 255));

        requestTestJButton.setText("Request ");
        requestTestJButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.black, java.awt.Color.white));
        requestTestJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestTestJButtonActionPerformed(evt);
            }
        });

        refreshTestJButton.setBackground(new java.awt.Color(204, 204, 0));
        refreshTestJButton.setText("Refresh");
        refreshTestJButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        refreshTestJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshTestJButtonActionPerformed(evt);
            }
        });

        workRequestJTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Items", "Request num", "Price", "Status", "Receiver"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(workRequestJTable1);

        gunsbox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        gunsbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gunsboxActionPerformed(evt);
            }
        });

        requestQuantity.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        requestQuantity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                requestQuantityKeyTyped(evt);
            }
        });

        manubox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        manubox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manuboxActionPerformed(evt);
            }
        });

        jLabel2.setText("Manufacture:");

        jLabel3.setText("GUN：");

        pricefixedTF.setEnabled(false);
        pricefixedTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pricefixedTFActionPerformed(evt);
            }
        });

        jButton14.setText("Get Price");
        jButton14.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, java.awt.Color.lightGray, null));
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jButton2.setForeground(new java.awt.Color(102, 204, 255));
        jButton2.setText("<<Back");
        jButton2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.gray, java.awt.Color.white));
        jButton2.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/ManufactureRole/回滚箭头.jpg"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jSeparator2.setForeground(new java.awt.Color(255, 51, 51));
        jSeparator2.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(255, 0, 0)));

        jSeparator4.setForeground(new java.awt.Color(255, 0, 51));
        jSeparator4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Request Guns", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial Black", 0, 14))); // NOI18N

        jLabel8.setText("Price from Manufacture:");

        jLabel9.setText("Guns Quantity:");

        jButton3.setBackground(new java.awt.Color(204, 204, 0));
        jButton3.setText("Remove");
        jButton3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(manubox, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(43, 43, 43)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(gunsbox, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(pricefixedTF, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                                    .addComponent(jButton14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(requestQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 413, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(refreshTestJButton, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                            .addComponent(requestTestJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(56, 56, 56)
                        .addComponent(refreshTestJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel3)
                                        .addComponent(gunsbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel2)
                                        .addComponent(manubox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(33, 33, 33)
                                .addComponent(jButton14))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(50, 50, 50)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel9)
                                    .addComponent(requestQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(3, 3, 3)))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pricefixedTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(82, 82, 82)
                                .addComponent(jButton2))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(requestTestJButton))))
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(409, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Import Guns", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void refreshTestJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshTestJButtonActionPerformed

        poprequest();
    }//GEN-LAST:event_refreshTestJButtonActionPerformed

    private void requestTestJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestTestJButtonActionPerformed
        Gun gun = (Gun) gunsbox.getSelectedItem();
        Enterprise Enterprise = (Enterprise) manubox.getSelectedItem();
        int quantity = (Integer) requestQuantity.getValue();
        int c=Integer.valueOf(pricefixedTF.getText());
        
        
        GunRequest gunRequest = new GunRequest();
        gunRequest.getGunInventoryitem().setGun(gun);
        gunRequest.getGunInventoryitem().setGuninventory(quantity);
        
        gunRequest.setGunprice(c);

        gunRequest.setStatus("sent");
        gunRequest.setSender(userAccount);
        gunRequest.setSendereEnterprise(distributorEnterprise);
        userAccount.getWorkQueue().getGunRequestList().add(gunRequest);
        Enterprise.getWorkQueue().getGunRequestList().add(gunRequest);
        
       
       
        poprequest();
        
    }//GEN-LAST:event_requestTestJButtonActionPerformed

    private void manuboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manuboxActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_manuboxActionPerformed

    private void gunsboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gunsboxActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_gunsboxActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
        int a=0;
         Gun gun = (Gun) gunsbox.getSelectedItem();
        Enterprise Enterprise = (Enterprise) manubox.getSelectedItem();
         for(GunInventoryitem gunInventoryitem : Enterprise.getGunInventory())
        {
            if(gunInventoryitem.getGun().getName().equals(gun.getName()))
                
             a=gunInventoryitem.getPrice();
           
        }
       pricefixedTF.setText(Integer.toString(a));
       money=a;
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        // TODO add your handling code here:
         int b=0;
         Bullet bullet = (Bullet) bulletcb.getSelectedItem();
        Enterprise Enterprise = (Enterprise) Manufacturercb.getSelectedItem();
         for(BulletInventoryitem bulletInventoryitem : Enterprise.getBulletInventory())
        {
            if(bulletInventoryitem.getBullet().getName().equals(bullet.getName()))
                
             b=bulletInventoryitem.getPrice();
            System.out.println(b);
            
        }
       pricefixedTxt.setText(Integer.toString(b));
       money=b;
    }//GEN-LAST:event_jButton15ActionPerformed

    private void bulletcbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bulletcbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bulletcbActionPerformed

    private void ManufacturercbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ManufacturercbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ManufacturercbActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
         display.remove(this);
        Component[] componentArray = display.getComponents();
        Component component = componentArray[componentArray.length - 1];
        DistributorAdminWorkJPanel dawjp = (DistributorAdminWorkJPanel) component;

        CardLayout layout = (CardLayout) display.getLayout();
        layout.previous(display);
    }//GEN-LAST:event_jButton1ActionPerformed
     private void txt3KeyTyped(java.awt.event.KeyEvent evt) {                              
        char enter = evt.getKeyChar();
        if (!(Character.isDigit(enter))) {
            evt.consume();
        }
    } 
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        display.remove(this);
        Component[] componentArray = display.getComponents();
        Component component = componentArray[componentArray.length - 1];
        DistributorAdminWorkJPanel dawjp = (DistributorAdminWorkJPanel) component;

        CardLayout layout = (CardLayout) display.getLayout();
        layout.previous(display);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void pricefixedTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pricefixedTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pricefixedTxtActionPerformed

    private void pricefixedTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pricefixedTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pricefixedTFActionPerformed

    private void requestQuantitybuKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_requestQuantitybuKeyTyped
        // TODO add your handling code here:
        txt3KeyTyped(evt);
    }//GEN-LAST:event_requestQuantitybuKeyTyped

    private void requestQuantityKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_requestQuantityKeyTyped
        // TODO add your handling code here:
        txt3KeyTyped(evt);
     
    }//GEN-LAST:event_requestQuantityKeyTyped

    private void RemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveActionPerformed
        // TODO add your handling code here:
        int selectrow = bulletsTable.getSelectedRow();
        if (selectrow >= 0) {
            BulletRequst bulletRequest = userAccount.getWorkQueue().getBulletRequstList().get(selectrow);
            if (bulletRequest.getStatus().equals("sent")) {
                userAccount.getWorkQueue().getBulletRequstList().remove(selectrow);
                popbulletrequest();
            } else {
                JOptionPane.showMessageDialog(null, "Can not cancel it!");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row!");
        }
    }//GEN-LAST:event_RemoveActionPerformed

    private void refresherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refresherActionPerformed
        // TODO add your handling code here:
         popbulletrequest();
    }//GEN-LAST:event_refresherActionPerformed

    private void RequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RequestActionPerformed
        // TODO add your handling code here:
         Bullet bu = (Bullet) bulletcb.getSelectedItem();
        Enterprise Enterprise = (Enterprise) Manufacturercb.getSelectedItem();
        int quantity = (Integer) requestQuantitybu.getValue();
        int c=Integer.valueOf(pricefixedTxt.getText());
        
        
        BulletRequst buRequest = new BulletRequst();
        buRequest.getBulletInventoryitem().setBullet(bu);
        buRequest.getBulletInventoryitem().setBulletinventory(quantity);
        
        buRequest.setBulletprice(c);

        buRequest.setStatus("sent");
        buRequest.setSender(userAccount);
        buRequest.setSendereEnterprise(distributorEnterprise);
        userAccount.getWorkQueue().getBulletRequstList().add(buRequest);
        Enterprise.getWorkQueue().getBulletRequstList().add(buRequest);
        
       
       
        popbulletrequest();
    }//GEN-LAST:event_RequestActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
         int selectrow = workRequestJTable1.getSelectedRow();
        if (selectrow >= 0) {
            GunRequest gunRequest = userAccount.getWorkQueue().getGunRequestList().get(selectrow);
            if (gunRequest.getStatus().equals("sent")) {
                userAccount.getWorkQueue().getGunRequestList().remove(selectrow);
                poprequest();
            } else {
                JOptionPane.showMessageDialog(null, "Can not cancel it!");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row!");
        }
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox Manufacturercb;
    private javax.swing.JButton Remove;
    private javax.swing.JButton Request;
    private javax.swing.JComboBox bulletcb;
    private javax.swing.JTable bulletsTable;
    private javax.swing.JComboBox gunsbox;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JComboBox manubox;
    private javax.swing.JTextField pricefixedTF;
    private javax.swing.JTextField pricefixedTxt;
    private javax.swing.JButton refreshTestJButton;
    private javax.swing.JButton refresher;
    private javax.swing.JSpinner requestQuantity;
    private javax.swing.JSpinner requestQuantitybu;
    private javax.swing.JButton requestTestJButton;
    private javax.swing.JTable workRequestJTable1;
    // End of variables declaration//GEN-END:variables
}
