/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.ManufactureRole;

import Business.Enterprise.Enterprise;
import Business.Enterprise.ManufactorEnterprise;
import Business.Gun.BulletInventoryitem;
import Business.Gun.GunBulletSystem;
import Business.Gun.GunInventoryitem;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.BulletRequst;
import Business.WorkQueue.GunRequest;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author yuzix
 */
public class ManageOrder extends javax.swing.JPanel {

    /**
     * Creates new form ManageOrder
     */
    JPanel userProcessContainer;
    ManufactorEnterprise manufactorEnterprise;
    UserAccount userAccount;
    GunBulletSystem gunBulletSystem;
    int revenue=0;
    int a=0;
    int profit=0;

    ManageOrder(JPanel userProcessContainer, Enterprise enterprise, UserAccount userAccount) {
         initComponents();
          this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.manufactorEnterprise = (ManufactorEnterprise) enterprise;

        gunBulletSystem = GunBulletSystem.getInstance();
        populatebulletRequest();
        populategunRequest();
        meTF.setText(Integer.toString(manufactorEnterprise.getExpense()));
        revenue=manufactorEnterprise.getRevenue();
        RTF.setText(Integer.toString(revenue));
        profit=revenue-manufactorEnterprise.getExpense();
        PTF.setText(Integer.toString(profit));
    }
     public void populategunRequest() {
        DefaultTableModel model = (DefaultTableModel) guntable.getModel();

        model.setRowCount(0);

        for (GunRequest request : manufactorEnterprise.getWorkQueue().getGunRequestList()) {
            Object[] row = new Object[5];
            row[0] = request;
            row[1] = request.getGunInventoryitem().getGuninventory();
            row[2] = request.getStatus();
            row[3] = request.getSender();
            row[4] = request.getGunprice();
            model.addRow(row);
        }
    }
private void txt3KeyTyped(java.awt.event.KeyEvent evt) {                              
        char enter = evt.getKeyChar();
        if (!(Character.isDigit(enter))) {
            evt.consume();
        }
    } 
    public void populatebulletRequest() {
        DefaultTableModel model = (DefaultTableModel) bullettable.getModel();

        model.setRowCount(0);

        for (BulletRequst request : manufactorEnterprise.getWorkQueue().getBulletRequstList()) {
            Object[] row = new Object[5];
            row[0] = request;
            row[1] = request.getBulletInventoryitem().getBulletinventory();
            row[2] = request.getStatus();
            row[3] = request.getSender();
            row[4] = request.getBulletprice();

            model.addRow(row);
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        bullettable = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        guntable = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        checkoutBtn = new javax.swing.JButton();
        PendingBtn = new javax.swing.JButton();
        BackBtn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        RTF = new javax.swing.JTextField();
        PTF = new javax.swing.JTextField();
        meTF = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(153, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255), 5), "Manage Request", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Times New Roman", 3, 48))); // NOI18N

        bullettable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Bullet", "Request num", "Status", "Sender", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(bullettable);

        guntable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Gun", "Request num", "Status", "Sender", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(guntable);

        jSeparator1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Request for Guns:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 2, 14))); // NOI18N

        jSeparator2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Request for Bullets:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 2, 14))); // NOI18N

        checkoutBtn.setBackground(new java.awt.Color(255, 153, 102));
        checkoutBtn.setFont(new java.awt.Font("Tw Cen MT", 2, 24)); // NOI18N
        checkoutBtn.setText("Check Out");
        checkoutBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        checkoutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkoutBtnActionPerformed(evt);
            }
        });

        PendingBtn.setBackground(new java.awt.Color(255, 153, 102));
        PendingBtn.setFont(new java.awt.Font("Trebuchet MS", 2, 24)); // NOI18N
        PendingBtn.setText("Pending");
        PendingBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        PendingBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PendingBtnActionPerformed(evt);
            }
        });

        BackBtn.setText("<<Back");
        BackBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 567, Short.MAX_VALUE)
                    .addComponent(jScrollPane5)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(BackBtn)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(checkoutBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PendingBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(90, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(91, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(56, 56, 56)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(181, 181, 181)
                        .addComponent(BackBtn)
                        .addGap(85, 85, 85))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(checkoutBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(PendingBtn)
                        .addGap(416, 416, 416))))
        );

        jTabbedPane1.addTab("WorkRequest", jPanel1);

        jPanel2.setBackground(new java.awt.Color(153, 204, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 153), 5), "Check Data", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 3, 36))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Times New Roman", 3, 48)); // NOI18N
        jLabel1.setText("Material Expense:");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 3, 48)); // NOI18N
        jLabel2.setText("Revenue:");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 3, 48)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 0));
        jLabel3.setText("Profit:");

        RTF.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        RTF.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        RTF.setEnabled(false);

        PTF.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        PTF.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        PTF.setEnabled(false);

        meTF.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        meTF.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        meTF.setEnabled(false);

        jButton2.setText("<<Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(188, 188, 188)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(meTF, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE)
                            .addComponent(RTF)
                            .addComponent(PTF)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton2)))
                .addContainerGap(66, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(meTF, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(RTF, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PTF, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(141, 141, 141)
                .addComponent(jButton2)
                .addContainerGap(169, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Data", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void checkoutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkoutBtnActionPerformed
        // TODO add your handling code here:
         int selectrow = guntable.getSelectedRow();
        int row=bullettable.getSelectedRow();
        if(selectrow>=0){
            GunRequest gunRequest =(GunRequest) guntable.getValueAt(selectrow, 0);
            GunInventoryitem gunInventory = manufactorEnterprise.findguninventory(gunRequest.getGunInventoryitem().getGun());
            if(gunInventory==null||(gunInventory.getGuninventory()<gunRequest.getGunInventoryitem().getGuninventory()))
            {
                for(GunRequest gunRequest1:gunRequest.getSender().getWorkQueue().getGunRequestList()){
                    if(gunRequest1.equals(gunRequest))
                    gunRequest1.setStatus("Pending");
                    gunRequest1.setReceiver(userAccount);
                }
                gunRequest.setReceiver(userAccount);
                gunRequest.setStatus("Pending");
                JOptionPane.showMessageDialog(null, "GUN is not enought!");
                populategunRequest();
            }else{
                for(GunRequest gunRequest1:gunRequest.getSender().getWorkQueue().getGunRequestList()){
                    if(gunRequest1.equals(gunRequest)){
                        gunRequest1.setStatus("completed");
                        gunRequest1.setReceiver(userAccount);
                    }

                }
                gunInventory.setGuninventory(gunInventory.getGuninventory()-gunRequest.getGunInventoryitem().getGuninventory());
                gunRequest.setReceiver(userAccount);
                gunRequest.setStatus("completed");
                revenue=revenue+gunRequest.getGunprice()*gunRequest.getGunInventoryitem().getGuninventory();
                manufactorEnterprise.setRevenue(revenue);
                populategunRequest();
            }
            a=manufactorEnterprise.getRevenue();
            RTF.setText(Integer.toString(a));
             profit=a-manufactorEnterprise.getExpense();
        PTF.setText(Integer.toString(profit));
        }
        else if(row>=0)
        {
            BulletRequst bulletRequst =(BulletRequst) bullettable.getValueAt(row, 0);
            BulletInventoryitem bulletInventory = manufactorEnterprise.findbulletinventory(bulletRequst.getBulletInventoryitem().getBullet());
            if(bulletInventory==null||(bulletInventory.getBulletinventory()<bulletRequst.getBulletInventoryitem().getBulletinventory()))
            {
                for(BulletRequst b:bulletRequst.getSender().getWorkQueue().getBulletRequstList()){
                    if(b.equals(bulletRequst))
                    b.setStatus("Pending");
                    b.setReceiver(userAccount);
                }
                bulletRequst.setReceiver(userAccount);
                bulletRequst.setStatus("Pending");
                JOptionPane.showMessageDialog(null, "Bullet is not enought!");
                populatebulletRequest();
            }else{
                for(BulletRequst b:bulletRequst.getSender().getWorkQueue().getBulletRequstList()){
                    if(b.equals(bulletRequst)){
                        b.setStatus("completed");
                        b.setReceiver(userAccount);
                    }

                }
                bulletInventory.setBulletinventory(bulletInventory.getBulletinventory()-bulletRequst.getBulletInventoryitem().getBulletinventory());
                bulletRequst.setReceiver(userAccount);
                bulletRequst.setStatus("completed");
                revenue=revenue+bulletRequst.getBulletprice()*bulletRequst.getBulletInventoryitem().getBulletinventory();
                manufactorEnterprise.setRevenue(revenue);
                populatebulletRequest();
            }
            a=manufactorEnterprise.getRevenue();
            RTF.setText(Integer.toString(a));
             profit=a-manufactorEnterprise.getExpense();
        PTF.setText(Integer.toString(profit));

        }
        else
        JOptionPane.showMessageDialog(null, "Please select a row!");
    }//GEN-LAST:event_checkoutBtnActionPerformed

    private void PendingBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PendingBtnActionPerformed
        // TODO add your handling code here:
        int selectrow = guntable.getSelectedRow();
        int row = bullettable.getSelectedRow();
        if (selectrow >= 0) {
            GunRequest gunRequest = (GunRequest) guntable.getValueAt(selectrow, 0);

            for (GunRequest gr : gunRequest.getSender().getWorkQueue().getGunRequestList()) {
                if (gr.equals(gunRequest)) {
                    gr.setStatus("Pending");
                    gr.setReceiver(userAccount);
                }
            }
            gunRequest.setReceiver(userAccount);
            gunRequest.setStatus("Pending");
            populategunRequest();
        } else if (row >= 0) {
            BulletRequst bulletRequst = (BulletRequst) bullettable.getValueAt(row, 0);

            for (BulletRequst br : bulletRequst.getSender().getWorkQueue().getBulletRequstList()) {
                if (br.equals(bulletRequst)) {
                    br.setStatus("Pending");
                    br.setReceiver(userAccount);
                }
            }
            bulletRequst.setReceiver(userAccount);
            bulletRequst.setStatus("Pending");
            populatebulletRequest();

        } else {
            JOptionPane.showMessageDialog(null, "Please select a row!");
        }
        
    }//GEN-LAST:event_PendingBtnActionPerformed

    private void BackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackBtnActionPerformed
        // TODO add your handling code here:
         userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        ManufactureAdminWorkJPanel sysAdminwjp = (ManufactureAdminWorkJPanel) component;

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_BackBtnActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
         userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        ManufactureAdminWorkJPanel sysAdminwjp = (ManufactureAdminWorkJPanel) component;

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackBtn;
    private javax.swing.JTextField PTF;
    private javax.swing.JButton PendingBtn;
    private javax.swing.JTextField RTF;
    private javax.swing.JTable bullettable;
    private javax.swing.JButton checkoutBtn;
    private javax.swing.JTable guntable;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField meTF;
    // End of variables declaration//GEN-END:variables
}
